מערכת להזמנת מופעים ושיעורי מוזיקה :
תיאור המוצר:
1.המערכת בעצם מציעה את השירותים של ארגון מוזיקאלי בשם "קול מיתר" 
  האירגון מציע שירותי בית ספר ומופעי מוזיקה לארועים שונים,
  האירגון מאפשרת ללקוח להחשף למידע של להקות חתונה שונות בלי להיכנס אליהם ביוטיוב.
2.כאשר נכנסים לאתר יש למשתמש שני אפשרויות אחת להזמין שיעור מוזיקאלי והשניה להזמין מופע כאשר הזמנת מופע מתאפשרת רק כאשר יש משתמש רשום 
  הלקוח יכול לראות את רשימת המופעים וגם לצמצם את האפשרויות על ידי חיפוש שם מוצר
  כאשר אפשר לראות תיאור קצר של המוצר בלחיצה עליו.
3.כאשר רוצים להזמין את המוצר אפשר ללחוץ ומיד נפתח חלון הזמנה במידה והמשתמש רשום ומחובר אם אינו מחובר תופעי לו דרך התחברות
   במידה ואינו רשום הוא צריך להרשם 
   כאשר הוא מחובר יכול הוא להזין פרטי הזמנה ולהזמין.
   *האפשרות השניה בקטגורית מופעים היא להוציא רשימה של להקות חתונה מיוטיוב שבמקום להכנס לכל סירטון כל המידע על הפירסומת מופיע לך עם הסרטון ביגלל שמדובר במאגר שבונה את עמצו מחדש יש לחכוד מס דקות 
4.בנושא בית הספר יש חלון שמראה את הכלים הנלמדים בבית הספר למוזיקה שמציעה החברה
   ניתן בלחיצה גם לראות תיאור הכלי וגם סרטון של המורה המרצה.
   בלשונית הזמנת שיעור התלמיד ממלא את פרטיו ואת הכלי שבו הוא מזמין שיעור ויכול להזמין ללא הרשמה לאתר.
   כל לקוח הרשום לאתר יכול בלחיצה על "ההזמנות שלי" לראות את כל ההזמנות
5.כאשר משתמש שהוא מנהל נכנס לאתר 
   נפתחות בפניו עוד שלוש חלונות 
   א . חלון אחד שממנו הוא יכל לראות את רשימת הלקוחות שלו ולמחוק לקוחות או הזמנות שלהם.
   ב . בחלון שני המנהל יכול לעדכן מוצר או להוסיף מוצר או אפשרות של שיעור מוזיקאלי .
   ג . כאשר המנהל מסמן אם הוא רוצה להוסיף עוד נושא שיעור או עוד מוצר שהוא מופע או לחלופין אם להוסיף או לעדכן
       בחלון השלישי המנהל יכול לראות את היומן הזמנות של החברה כולל גם  שיעורים וגם מופעים לפי שעות היום בלחיצה על היום המסומן גם המנהל יודע שימים שמסומנים בצבע אדום יש לו משהו באותו יום ובלחיצה על המספר נפתח לפניו הסדר יום
        שמאפשר לו למחוק רשומה מאותו היום .
צד השרת של הפרוייקט: 
-מתקשר עם טבלת sql על ידי שימוש בEntity Framework  שהקוד בונה את נתוני הטבלה 
 שהם :פרטי לקוח, פרטי מוצר פרטי תלמיד ופרטי הזמנה כאשר הקשר בינהם מוגדר על ידי יחוס (על כל לקוח יש כמה הזמנות ,על כל הזמנה יש מוצר אחד וכו') ובניית מפתחות ראשיים כמו כן מחלקת התלמיד ומחלקת ההזמנה יורשות מאותה מחלקת אב שהיא מישמת פונקציה שכאשר נרצה להשתמש בתאריך +שעה למטרת מחיקה נוכל למחוק על ידי שיטת fectory שמבצע אוטומתית בלי התניה (desine pattenb)ץ 
-כמו כן צד השרת שולח crowler ששולף מידע מיוטיוב ועורך אות למופעי להקת חתונה שבנויים מתיאור וקישור.
-כמובן שצד השרת כולל פונקציות מחיקה שליפה הוספה ועדכון. 
צד הלקוח :
-מתקשר בין היתר עם שרת fireBase שמייצר ומעדכן מבנה מוצר דומה רק שמוצרים אלו הם אינם מייצגים הופעות ומופעים אלא מבני שיעורי כלי שמציע בית הספר 
וגם השרת הנוסף הנל מייצר שכפול לקוחות שלו שאם הלקוח גם רשום בשרת השני הוא בעצם משתמש לקוח שהוא מנהל וחשוף לצד הניהולי של האתר (יומן ,ניהול לקוחות ועדכון מוצרים)
וכמובן השרת מחזיק תמונות של אתר הבית ואפשרות של התחברות משתמש .
בצד הלקוח יש מבנה קבוע עיצובית שבעצם מנטב בין כל העמודים השונים של האתר (שיטת singel page app).
יתר פירוט הפונקציות השונות נמצא בקוד .
בברכה שילה ביטון

נספח הסבר שמות התיקיות בפרוייקט Angular:
AdminGuard- שומר שרק אם אתה מחובר במנהל אתה יכול לנוות לדפי הניהול
add-custumer- תוסיף לקוח
add order- ,תוסיף הזמנה
add student-תוסיף שיעור
add update prodact- תוסיף או תידכן מוצר שהוא או הופעה או שיעור נגינה
bandcard - דף שמראה את להקות החתונה
calender- יומן שבנוי כלוח שנה
custumer card- יוצר תבנית של טבלה שמחזיקה את ההזמנות של לקוח
enter custumer - כניסת/ התחברות לקוח
hone -דף הבית שמראה את חברת הנגינה / מוזיקה
instrument- דף שמציג את כלי הנגינה הנילמדים בבית הספר
My orders- דף שמראה ללקוח את ההזמנות שלו
my work- דף שמראה למנהל את הלקוחות שלו ואת ההזמנות שלהם
prodact card- מבנה של כרטיס מוצר
prodacts- דף שמראה את המוצרים שממנו אפשר להזמין
shiloApi -servise ההתקשרות עם צד השרת שיושב באז'ור
firebase - התקשרות עם שרת firebase
authentication.service.spec-התקשרות עם ההתחברו כמשתמש לשרת fireBase
